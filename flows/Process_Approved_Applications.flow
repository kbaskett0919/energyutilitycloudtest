<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <decisions>
        <description>Determines whether program ID exists for the record retrieved from GetProgramProduct.</description>
        <name>HasProgram</name>
        <label>Has Program?</label>
        <locationX>407</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>CreateProgramEnrollment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>ProgramProductHasProduct</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>GetProgramProduct.ProgramId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetProgramProduct.Program.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the individual application item record is associated with a program product record.</description>
        <name>HasProgramProduct</name>
        <label>Has Program Product?</label>
        <locationX>176</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>GetProgramProduct</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>DoesNotHaveProgramProduct</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RelatedItemId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the individual application was submitted by a consumer and checks for a matching Account ID.</description>
        <name>IsConsumerApplication</name>
        <label>Is Consumer Application?</label>
        <locationX>605</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>ComputeApplicationBenefits</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>IsNotConsumerApplication</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsSubmittedByThirdParty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SubmittedByAccountId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.AccountId</elementReference>
                </rightValue>
            </conditions>
            <label>No</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <description>Returns the value “Contractor” if the application is submitted by a third party and the submitter’s account ID matches the account ID field in the Program Enrollment record. Otherwise, it returns the value “Consumer”.</description>
        <name>EnrolleRole</name>
        <dataType>String</dataType>
        <expression>IF (AND({!$Record.IsSubmittedByThirdParty} = true,  {!$Record.SubmittedByAccountId} = {!$Record.Account.Id}), &quot;Contractor&quot;,  &quot;Consumer&quot;)</expression>
    </formulas>
    <interviewLabel>Process Approved Applications {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Process Approved Applications</label>
    <overriddenFlow>eucloudprogram__ProcessApplnApproval</overriddenFlow>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Creates a Program Enrollment record, setting the Account ID to match the account ID of the triggering record, the Application Date to match the applied date of the triggering record, the Enrollee Role to match the enrollee role passed into the flow, the Individual Application ID to match the individual application ID of the triggering record, the IsActive field to true, the Name to include the name of the triggering record, the Program ID to match the program product record, and the Status to Applied.</description>
        <name>CreateProgramEnrollment</name>
        <label>Create Program Enrollment</label>
        <locationX>605</locationX>
        <locationY>755</locationY>
        <connector>
            <targetReference>IsConsumerApplication</targetReference>
        </connector>
        <inputAssignments>
            <field>ApplicationDate</field>
            <value>
                <elementReference>$Record.AppliedDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EnrolleeRole</field>
            <value>
                <elementReference>EnrolleRole</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IndividualApplicationId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsActive</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <stringValue>Enrollment for {!$Record.Name}</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ProgramId</field>
            <value>
                <elementReference>GetProgramProduct.ProgramId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Applied</stringValue>
            </value>
        </inputAssignments>
        <object>ProgramEnrollment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>Gets the first individual application item record with an individual application ID that matches the ID of the triggering record. Stores the RelatedItemId of the individual application item in the RelatedItemId variable.</description>
        <name>GetApplicationItem</name>
        <label>Get Application Item</label>
        <locationX>176</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>HasProgramProduct</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IndividualApplicationId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <object>IndividualApplicationItem</object>
        <outputAssignments>
            <assignToReference>RelatedItemId</assignToReference>
            <field>RelatedItemId</field>
        </outputAssignments>
        <sortField>LastModifiedDate</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordLookups>
        <description>Gets the Program Product record related to the individual application record that triggered the flow.</description>
        <name>GetProgramProduct</name>
        <label>Get Program Product</label>
        <locationX>407</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>HasProgram</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RelatedItemId</elementReference>
            </value>
        </filters>
        <filters>
            <field>ProgramId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RelatedItemId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProgramProduct</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetApplicationItem</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>Category</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Program</stringValue>
            </value>
        </filters>
        <object>IndividualApplication</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <description>Calls an invocable action that generates the benefits for the application. If the action encounters an error, it is stored in BenefitComputationErrorMessage.</description>
        <name>ComputeApplicationBenefits</name>
        <label>Compute Application Benefits</label>
        <locationX>737</locationX>
        <locationY>971</locationY>
        <flowName>eucloudprogram__ComputeApplnBenefits</flowName>
        <inputAssignments>
            <name>applicationId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>BenefitComputationErrorMessage</assignToReference>
            <name>benefitComputationErrorMessage</name>
        </outputAssignments>
    </subflows>
    <variables>
        <description>Stores the error message received from the ComputeApplicationBenefits action.</description>
        <name>BenefitComputationErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID of the program or the product in the program associated with the triggering individual application.</description>
        <name>RelatedItemId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
